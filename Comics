import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


public class Comics2 {

	/**
	 * @param args
	 */
	
		public static void main(String[] args) {
	
		JFrame frame = new JFrame("Comics"); 
	        Dimension screenSize = frame.getToolkit().getScreenSize(); 
	        frame.setLayout(new FlowLayout()); 
	        
	        JButton search = new JButton("Show B Names in Table");
	        JButton searchall = new JButton("Show All Names in Table");
	        JButton sort = new JButton("Sort by Last Name");
	
	        final DefaultTableModel model = new DefaultTableModel(1,3); 
	        final JTable texttable = new JTable();
	        
	        texttable.setModel (model);
	        
	        JPanel mypanel = new JPanel(new GridBagLayout());
	        mypanel.add(texttable);
	        mypanel.add(search);
	        mypanel.add(searchall);
	        mypanel.add(sort);
	        
	        frame.add(mypanel);
	        frame.setSize(4500,4500); 
	        frame.setBounds(screenSize.width/6, screenSize.height/6, 
	           		screenSize.width/1, screenSize.height/1); 

	        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
	        frame.setVisible(true); 
			
	        search.addActionListener(new ActionListener() {
	        	public void actionPerformed(ActionEvent e1) {
	        	while (model.getRowCount()>0){
	        		model.removeRow(0);
	        	}
	        	
	        		try{           
	    				Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
	    				Connection con = DriverManager.getConnection("jdbc:odbc:comics2");
	    				Statement st = con.createStatement();
	    				ResultSet rs = st.executeQuery("select * from comics where [title] ORDER by [title] asc");
	    				
	    				while (rs.next()) {
	    					
	    					String[] infos = new String[3];
	    					infos[0] = rs.getString(1);
	    					infos[1]= rs.getString(2);
	    					infos[2] = rs.getString(3);
	    					model.addRow(infos);
	    				}
	    				
	    				} 
	    			catch
	    			(Exception e){
	    		           System.out.println("does not added:"+e);
	    		           }
	    			
	        	}});
	        
	        searchall.addActionListener(new ActionListener() {
	        	public void actionPerformed(ActionEvent e1) {
	        		while (model.getRowCount()>0){
		        		model.removeRow(0);
		        	}
		        	
		        		
		        		try{           
		    				Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
		    				Connection con = DriverManager.getConnection("jdbc:odbc:comics2");
		    				Statement st = con.createStatement();
		    				ResultSet rs = st.executeQuery("select * from comics where [producer] ORDER by [producer] desc");
		    				
		    				while (rs.next()) {
		    					
		    					String[] infos = new String[3];
		    					infos[0] = rs.getString(1);
		    					infos[1]= rs.getString(2);
		    					infos[2] = rs.getString(3);
		    					model.addRow(infos);
		    				}
		    				
		    				
		    				} 
		    			catch
		    			(Exception e){
		    		           System.out.println("does not added:"+e);
		    		           }
	        		
	        	}});
	        
	      
	        
	        sort.addActionListener(new ActionListener() {
	        	public void actionPerformed(ActionEvent e1) {
	        		while (model.getRowCount()>0){
		        		model.removeRow(0);
		        	}
		        	
		        		try{           
		    				Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
		    				Connection con = DriverManager.getConnection("jdbc:odbc:comics2"); 
		    				Statement st = con.createStatement();
		    				ResultSet rs = st.executeQuery("select * from comics where [producer] like 'marvel%'");
		    				
		    				while (rs.next()) {
		    					
		    					String[] infos = new String[3];
		    					infos[0] = rs.getString(1);
		    					infos[1]= rs.getString(2);
		    					infos[2] = rs.getString(3);
		    					model.addRow(infos);
		    				}
		    				String [] infoss = 
		    				
		    				} 
		    			catch
		    			(Exception e){
		    		           System.out.println("does not added:"+e);
		    		           }
	        		
	        	}});
			}
		}
		
